[project]
name = "agentspy"
version = "0.1.0"
description = "LangSmith-compatible observability layer for AI agents and LangChain applications"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "aiosqlite>=0.21.0",
    "fastapi>=0.116.1",
    "greenlet>=3.2.4",
    "httpx>=0.28.1",
    "pydantic>=2.11.7",
    "pydantic-settings>=2.10.1",
    "python-multipart>=0.0.20",
    "sqlalchemy>=2.0.43",
    "uvicorn[standard]>=0.35.0",
]

[dependency-groups]
dev = [
    "langchain>=0.3.27",
    "langchain-ollama>=0.3.6",
    "langgraph>=0.6.5",
    "mypy>=1.17.1",
    "pytest>=8.4.1",
    "pytest-asyncio>=1.1.0",
    "pytest-cov>=6.2.1",
    "requests>=2.32.4",
    "ruff>=0.12.9",
    "basedpyright>=1.21.0",
    "bandit[toml]>=1.8.0",
    "pre-commit>=4.0.0",
]

# Bandit security linting configuration
[tool.bandit]
exclude_dirs = ["tests", "examples", "frontend"]
skips = ["B101"]  # Skip assert_used test since we use asserts in tests

[tool.bandit.assert_used]
skips = ["*_test.py", "test_*.py"]

# Basedpyright type checking configuration
[tool.basedpyright]
include = ["src"]
exclude = ["tests", "examples", "frontend"]
reportMissingTypeStubs = false
reportUnknownMemberType = false
reportUnknownVariableType = false
reportUnknownArgumentType = false
reportUnknownParameterType = false
reportCallInDefaultInitializer = false
reportImplicitOverride = false
reportExplicitAny = false
reportUnannotatedClassAttribute = false
reportMissingParameterType = false
reportAttributeAccessIssue = false
reportDeprecated = false
reportUnusedCallResult = false
reportUnusedParameter = false
reportUnusedFunction = false
reportUnusedImport = false
reportMissingTypeArgument = false
reportIncompatibleVariableOverride = false
reportCallIssue = false
reportReturnType = false
reportArgumentType = false
reportGeneralTypeIssues = false
pythonVersion = "3.13"
